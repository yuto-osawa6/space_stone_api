# version: 2.1
# orbs:
#   ruby: circleci/ruby@1.7.1

# jobs:
#   test:
#     docker:
#       - image: circleci/ruby:2.7.0
#       # - image: cimg/ruby:2.7.0
#         # environment:
#         #   RAILS_ENV: test
#         #   DB_HOST: 127.0.0.1
#       - image: circleci/mysql:8.0
#       # - image: cimg/mysql:8.0
    

#     working_directory: ~/space_stone_api

#     steps:
#       - checkout
#       - ruby/install-deps

#       # restore gem from cache
#       # - restore_cache:
#       #     keys:
#       #       - gem-cache-v1-{{ checksum "~/space_stone_api/Gemfile.lock" }}
#       #       - gem-cache-v1-
#       #     working_directory: ~/space_stone_api

#       # # gem install
#       # - run:
#       #     command: |
#       #       gem install bundler
#       #       bundle config set path 'vendor/bundle'
#       #       bundle install --jobs=4 --retry=3
#       #     working_directory: ~/space_stone_api

#       # - save_cache:
#       #     key: gem-cache-v1-{{ checksum "~/space_stone_api/Gemfile.lock" }}
#       #     paths:
#       #       - ~/space_stone_api/vendor/bundle
#       #     working_directory: ~/space_stone_api

#       # Database setup
#       # - run:
#       #     command: bundle exec rails db:create
#       #     working_directory: ~/space_stone_api
#       # - run:
#       #     command: bundle exec rails db:migrate
#       #     working_directory: ~/space_stone_api

#       # - run:
#       #     name: create directory to store test results
#       #     command: mkdir /tmp/test-results
#       #     working_directory: ~/space_stone_api

#       # run tests
#       # - run:
#       #     name: RSpec
#       #     command: |
#       #       bundle exec rspec $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings) \
#       #         || (printf "====== RETRYING...\n\n\n"; bundle exec rspec --only-failures)
#       #     working_directory: ~/space_stone_api
#       - ruby/rspec-test
# workflows:
#   version: 2
#   test:
#     jobs:
#       - test:
#           filters:
#             branches:
#               ignore: main

            # cannot load such file -- rspec_junit_formatter

# workflows:
#   version: 2
#   test:
#     jobs:
#       - build
#       - test:
#           requires:
#             - build


# version: 2.1

# orbs:
#   ruby: circleci/ruby@1.7.1
#   # node: circleci/node@2

# jobs:
#   build:
#     docker:
#       - image: cimg/ruby:2.7.0
#       - image: circleci/mysql:8.0
#   #   # working_directory: ~/space_stone_api
#     steps:
#       - checkout
#       - ruby/install-deps
#   test:
#     parallelism: 3
#     docker:
#       - image: cimg/ruby:2.7.0
#       - image: circleci/mysql:8.0
#         # environment:
#         #   POSTGRES_USER: circleci-demo-ruby
#         #   POSTGRES_DB: rails_blog_test
#         #   POSTGRES_PASSWORD: ""
#     # environment:
#     #   BUNDLE_JOBS: "3"
#     #   BUNDLE_RETRY: "3"
#     #   PGHOST: 127.0.0.1
#     #   PGUSER: circleci-demo-ruby
#     #   PGPASSWORD: ""
#     #   RAILS_ENV: test
#     steps:
#       - checkout
#       - ruby/install-deps
#       # - run:
#       #     name: Wait for DB
#       #     command: dockerize -wait tcp://localhost:5432 -timeout 1m
#       # - run:
#       #     name: Database setup
#       #     command: bundle exec rails db:schema:load --trace
#       # Run rspec in parallel
#       - ruby/rspec-test
#       # - ruby/rubocop-check

# workflows:
#   version: 2
#   build_and_test:
#     jobs:
#       - build
#       - test:
#           requires:
#             - build


version: '2.1'
orbs:
  ruby: circleci/ruby@1.7.1
jobs:
  build:
    docker:
      - image: cimg/ruby:2.7.0
      - image: cimg/mysql:8.0
        command: mysqld --default-authentication-plugin=mysql_native_password
    steps:
      - checkout
      - run:
          name: default mysql client install
          command: |
            sudo apt update -qq
            sudo apt-get install -y default-mysql-client
            # sudo apt-get install -y libmysqlclient-dev
      # - run: ruby --version
      - ruby/install-deps
      # - node/install-packages:
      #     cache-key: yarn.lock
      #     pkg-manager: yarn
  checking:
    docker:
      - image: cimg/ruby:2.7.0
      # - run: ruby --version
      - image: cimg/mysql:8.0
        command: mysqld --default-authentication-plugin=mysql_native_password
        environment:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
    environment:
      BUNDLE_JOBS: "4"
      BUNDLE_RETRY: "3"
      BUNDLE_PATH: vendor/bundle
    steps:
      - checkout
      # - run:
      #     name: default mysql client install
      #     command: |
      #       sudo apt update -qq
      #       sudo apt-get install default-mysql-client

      # - run:
      #     name: Install mysql2
      #     command: gem install mysql2 -v '0.5.3' --source 'https://rubygems.org/'
      - ruby/install-deps
      # - ruby/rubocop-check:
      #     format: progress
      #     label: Inspecting with Rubocop
  test:
    docker:
      - image: cimg/ruby:2.7.0
      - image: cimg/mysql:8.0
      # - environment:
      #     POSTGRES_DB: rails_blog_test
      #     POSTGRES_PASSWORD: ''
      #     POSTGRES_USER: circleci-demo-ruby
        # image: 'circleci/postgres:9.5-alpine'
    # environment:
    #   BUNDLE_JOBS: '3'
    #   BUNDLE_RETRY: '3'
    #   PGHOST: 127.0.0.1
    #   PGPASSWORD: ''
    #   PGUSER: circleci-demo-ruby
    #   RAILS_ENV: test
    parallelism: 3
    steps:
      - checkout
      - ruby/install-deps
      # - node/install-packages:
      #     cache-key: yarn.lock
      #     pkg-manager: yarn
      - run:
          command: 'dockerize -wait tcp://localhost:5432 -timeout 1m'
          name: Wait for DB
      - run:
          command: 'bundle exec rails db:schema:load --trace'
          name: Database setup
      - ruby/rspec-test:
          include: spec/**/*_spec.rb
workflows:
  build_and_test:
    jobs:
      - build
      - checking
      - test:
          requires:
            - build

# jobs:
#   build:
#     docker:
#       - image: cimg/ruby:2.7.0
#     steps:
#       - checkout
#       # - ruby/install-deps
#       - run: ruby --version